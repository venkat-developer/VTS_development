INSERT INTO users(id,username, password, firstname,lastname,email,address,phone,role,isactive) VALUES (1,'test','test','firstname','lastname','test@gmail.com','Bengalore',12345,1,true);

INSERT INTO users(id,username, password, firstname,lastname,email,address,phone,role,isactive) VALUES (2,'admin','admin','adminfirst name','admin lastname','admin@gmail.com','Bengalore',678901,2,true);

select * from users;

UPDATE users SET userrole=1 where id=2 

truncate table users;

select * from users;
   
INSERT INTO users(id,username, password, firstname,lastname,email,address,phone,userrole,isactive) VALUES (3,'test','test','firstname','lastname','test@gmail.com','Bengalore',12345,2,true);
INSERT INTO users(id,username, password, firstname,lastname,email,address,phone,userrole,isactive) VALUES (1,'super','super','superfirstname','superlastname','supertest@gmail.com','Bengalore',12345,0,true);
INSERT INTO users(id,username, password, firstname,lastname,email,address,phone,userrole,isactive) VALUES (2,'admin','admin','adminfirst name','admin lastname','admin@gmail.com','Bengalore',678901,1,true);

DROP TABLE IF EXISTS vehicle;
CREATE TABLE vehicle(
vehicle_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
user_id INT NOT NULL,
registration_num VARCHAR(30) NOT NULL,
vehicle_type INT NOT NULL,
vehicleMake VARCHAR(50),
vehicleModel VARCHAR(50),
vehicleModelYear VARCHAR(50),
insurance_validity TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
)

DROP TABLE IF EXISTS vehicle_type;
CREATE TABLE vehicle_type(
type_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
vehicle_category VARCHAR(50)
)

DROP TABLE IF EXISTS driver;
CREATE TABLE driver(
driver_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
user_id INT(6) NOT NULL,
firstname VARCHAR(30) NOT NULL,
lastname VARCHAR(30) NOT NULL,
email VARCHAR(50),
mobile_number INT(10),
licence_number VARCHAR(30) NOT NULL
)

DROP TABLE IF EXISTS passenger;
CREATE TABLE passenger(
passanger_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
firstname VARCHAR(30) NOT NULL,
lastname VARCHAR(30) NOT NULL,
email VARCHAR(50),
mobile_number INT(10),
address VARCHAR(50),
user_id INT(6) NOT NULL,
passanger_type INT(3) NOT NULL,
vendor_id INT(6)
)



DROP TABLE IF EXISTS passanger
CREATE TABLE vendor(
vendor_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
firstname VARCHAR(30) NOT NULL,
lastname VARCHAR(30) NOT NULL,
email VARCHAR(50),
mobile_number INT(10),
address VARCHAR(50),
user_id INT(6) NOT NULL,
contact_person VARCHAR(30)
)

DROP TABLE IF EXISTS 
CREATE TABLE vendor_agreement(
agreement_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
user_id INT(6) NOT NULL,
vendor_id INT(6),
local_per_km DECIMAL(5 ,4),
outstation_per_km DECIMAL(5, 4 ),
driver_beta DECIMAL(5,4 ),
tax DECIMAL(5, 4)
)

DROP TABLE IF EXISTS travels
CREATE TABLE users( travels_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
user_name VARCHAR(50) NOT NULL,
password VARCHAR(50) NOT NULL,
travels_name VARCHAR(50) NOT NULL,
email VARCHAR(50) NOT NULL,
mobile_number INT(10) NOT NULL,
address VARCHAR(50),
user_id INT(6) NOT NULL,
contact_person VARCHAR(30),
subscription_type INT(6) NOT NULL,
website VARCHAR(30),
registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
)

DROP TABLE IF EXISTS subscription_type
CREATE TABLE subscription_type(
subscription_id INT(6) UNSIGNED NOT NULL,no_of_days INT(6) NOT NULL
)

DROP TABLE IF EXISTS trip_sheet
CREATE TABLE trip_sheet(
trip_id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
trip_sheet_number INT(10) UNSIGNED NOT NULL,
vehicle_id INT(6) UNSIGNED NOT NULL,
driver_id INT(6) UNSIGNED NOT NULL,
trip_type INT(6) UNSIGNED NOT NULL,
ac_trip BOOLEAN NOT NULL,
passanger_name VARCHAR(50) NOT NULL,
refferedby VARCHAR(50),
travels_id INT(6) NOT NULL,
user_id INT(6) NOT NULL,
trip_start_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
trip_end_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
tax DECIMAL(5, 4),
driver_beta DECIMAL(5, 4),
grand_total DECIMAL(5, 4),
start_km INT(10) NOT NULL,
end_km INT(10) NOT NULL
)
